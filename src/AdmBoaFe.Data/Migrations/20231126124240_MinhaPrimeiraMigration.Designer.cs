// <auto-generated />
using System;
using AdmBoaFe.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdmBoaFe.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20231126124240_MinhaPrimeiraMigration")]
    partial class MinhaPrimeiraMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DevIO.Business.Models.Condominio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AreaTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ContatoAdministracao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContatoSindico")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataFundacao")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<Guid>("LogradouroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("NumeroBlocos")
                        .HasColumnType("int");

                    b.Property<int>("NumeroTotalUnidades")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxaCondominioMensal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoCondominio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogradouroId");

                    b.ToTable("Condominios", (string)null);
                });

            modelBuilder.Entity("DevIO.Business.Models.Imovel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("InquilinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InquilinoId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LogradouroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ProprietarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("InquilinoId")
                        .IsUnique();

                    b.HasIndex("InquilinoId1");

                    b.HasIndex("LogradouroId");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("Imoveis", (string)null);
                });

            modelBuilder.Entity("DevIO.Business.Models.Inquilino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("LogradouroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoInquilino")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogradouroId");

                    b.ToTable("Inquilinos", (string)null);
                });

            modelBuilder.Entity("DevIO.Business.Models.Logradouro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LogradouroNome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Logradouro");
                });

            modelBuilder.Entity("DevIO.Business.Models.Proprietario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("LogradouroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoProprietario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogradouroId");

                    b.ToTable("Proprietarios", (string)null);
                });

            modelBuilder.Entity("DevIO.Business.Models.Condominio", b =>
                {
                    b.HasOne("DevIO.Business.Models.Logradouro", "Logradouro")
                        .WithMany()
                        .HasForeignKey("LogradouroId")
                        .IsRequired();

                    b.Navigation("Logradouro");
                });

            modelBuilder.Entity("DevIO.Business.Models.Imovel", b =>
                {
                    b.HasOne("DevIO.Business.Models.Condominio", "Condominio")
                        .WithMany("Imovel")
                        .HasForeignKey("CondominioId")
                        .IsRequired();

                    b.HasOne("DevIO.Business.Models.Inquilino", null)
                        .WithOne("Imovel")
                        .HasForeignKey("DevIO.Business.Models.Imovel", "InquilinoId")
                        .IsRequired();

                    b.HasOne("DevIO.Business.Models.Inquilino", "Inquilino")
                        .WithMany()
                        .HasForeignKey("InquilinoId1")
                        .IsRequired();

                    b.HasOne("DevIO.Business.Models.Logradouro", "Logradouro")
                        .WithMany()
                        .HasForeignKey("LogradouroId")
                        .IsRequired();

                    b.HasOne("DevIO.Business.Models.Proprietario", "Proprietario")
                        .WithMany("Imoveis")
                        .HasForeignKey("ProprietarioId")
                        .IsRequired();

                    b.Navigation("Condominio");

                    b.Navigation("Inquilino");

                    b.Navigation("Logradouro");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("DevIO.Business.Models.Inquilino", b =>
                {
                    b.HasOne("DevIO.Business.Models.Logradouro", "Logradouro")
                        .WithMany()
                        .HasForeignKey("LogradouroId")
                        .IsRequired();

                    b.Navigation("Logradouro");
                });

            modelBuilder.Entity("DevIO.Business.Models.Proprietario", b =>
                {
                    b.HasOne("DevIO.Business.Models.Logradouro", "Logradouro")
                        .WithMany()
                        .HasForeignKey("LogradouroId")
                        .IsRequired();

                    b.Navigation("Logradouro");
                });

            modelBuilder.Entity("DevIO.Business.Models.Condominio", b =>
                {
                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("DevIO.Business.Models.Inquilino", b =>
                {
                    b.Navigation("Imovel")
                        .IsRequired();
                });

            modelBuilder.Entity("DevIO.Business.Models.Proprietario", b =>
                {
                    b.Navigation("Imoveis");
                });
#pragma warning restore 612, 618
        }
    }
}
